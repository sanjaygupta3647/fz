(function (c, p, d, q) {
    function n(b, a) { this.element = b.wrap("<div class='fizz-kart'></div>").parent(); this.init(a) } n.defaults = { widthDisplay: 300, heightDisplay: 450, isAutoScaleDisplay: "true", isAutoScaleHeight: "true", isDownloadEnabled: "true", downloadPosition: 3, nrThumbsPerRow: 4, isThumbsOneRow: "true", thumbsPosition: "bottom", firstThumbSelected: 0, isOneThumbShown: "false", colorActiveThumb: -1, zoomPosition: "right", speed: 400, easing: "linear", isKeypressEnabled: "true", colorIcons: -1 }; n.prototype = { init: function (b) {
        var a =
this; a.config = c.extend(!0, {}, n.defaults, b); a._options = b; "top" == a.config.thumbsPosition ? a.element.append("<div class='fz-display-area'><div class='fz-icon fz-icon-download'></div><div class='fz-icon fz-icon-next'></div><div class='fz-icon fz-icon-prev'></div><div class='fz-display-container'><div class='fz-lens fz-hide'></div><img class='fz-display-display' alt='Display Image' /></div></div>") : a.element.prepend("<div class='fz-display-area'><div class='fz-icon fz-icon-download'></div><div class='fz-icon fz-icon-next'></div><div class='fz-icon fz-icon-prev'></div><div class='fz-display-container'><div class='fz-lens fz-hide'></div><img class='fz-display-display' alt='Display Image' /></div></div>");
        a.element.prepend("<div class='fz-zoom fz-hide'><div class='fz-zoom-container'><img alt='Zoomed Image' /></div></div>"); a.element.prepend("<div class='fz-overlay-area fz-hide'><div class='fz-icon fz-icon-close'></div><div class='fz-icon fz-icon-next'></div><div class='fz-icon fz-icon-prev'></div><div class='fz-overlay-container'><img class='fz-overlay-display' alt='Overlay Image' /></div></div>"); a.gcLoader = c("<div class='fz-loading'></div>"); a.gcLoading = a.element.find(".fz-loading"); a.gcImgNaturalSizes =
[]; a.gcDisplayArea = a.element.find(".fz-display-area"); a.gcDisplayContainer = a.gcDisplayArea.find(".fz-display-container"); a.gcDisplayDisplay = a.gcDisplayContainer.find(".fz-display-display"); a.gcLens = a.gcDisplayContainer.find(".fz-lens"); a.gcDisplayDownload = a.gcDisplayArea.find(".fz-icon-download"); a.gcDisplayPrevious = a.gcDisplayArea.find(".fz-icon-prev"); a.gcDisplayNext = a.gcDisplayArea.find(".fz-icon-next"); a.gcZoom = a.element.find(".fz-zoom"); a.gcZoomContainer = a.gcZoom.find(".fz-zoom-container"); a.gcZoomDisplay =
a.gcZoomContainer.find("img"); a.gcOverlayArea = a.element.find(".fz-overlay-area"); a.gcOverlayContainer = a.gcOverlayArea.find(".fz-overlay-container"); a.gcOverlayDisplay = a.gcOverlayContainer.find(".fz-overlay-display"); a.gcOverlayPrevious = a.gcOverlayArea.find(".fz-icon-prev"); a.gcOverlayNext = a.gcOverlayArea.find(".fz-icon-next"); a.gcOverlayClose = a.gcOverlayArea.find(".fz-icon-close"); a.gcThumbsUl = a.element.find("ul"); a.gcThumbsUl.wrap("<div class='fz-thumbs-area'></div>"); a.gcThumbsArea = a.element.find(".fz-thumbs-area");
        a.gcThumbsArea.append("<div class='fz-thumbs-area-prev'><div class='fz-icon fz-icon-prev'></div></div><div class='fz-thumbs-area-next'><div class='fz-icon fz-icon-next'></div></div>"); a.gcThumbsAreaPrevious = a.gcThumbsArea.find(".fz-thumbs-area-prev"); a.gcThumbsPrevious = a.gcThumbsAreaPrevious.find(".fz-icon-prev"); a.gcThumbsAreaNext = a.gcThumbsArea.find(".fz-thumbs-area-next"); a.gcThumbsNext = a.gcThumbsAreaNext.find(".fz-icon-next"); a.gcThumbsLi = a.gcThumbsUl.find("li"); a.gcThumbsImg = a.gcThumbsLi.find("img");
        a.gcThumbsImg.wrap('<div class="fz-li-display-container"></div>'); a.gcThumbsLiDiv = a.gcThumbsLi.find(".fz-li-display-container"); a.gcTotalThumbsImg = a.gcThumbsImg.length; a.gcThumbsUl.removeClass("fz-start"); -1 != a.config.colorIcons && a.element.find(".fz-icon").css("color", a.config.colorIcons); b = { top: "", bottom: "", right: "", left: "" }; switch (a.config.downloadPosition) { case 1: b.top = 0; b.left = 0; break; case 2: b.top = 0; b.right = 0; break; case 4: b.bottom = 0; b.right = 0; break; default: b.bottom = 0, b.left = 0 } a.gcDisplayDownload.css(b);
        !1 == isNaN(a.config.firstThumbSelected) && -1 < parseFloat(a.config.firstThumbSelected) && parseFloat(a.config.firstThumbSelected); a.current = a.config.firstThumbSelected; a.currentSlide = Math.floor(a.current / a.config.nrThumbsPerRow); a.old = 0; a.currentMousePos = { x: -1, y: -1 }; "false" == a.config.isDownloadEnabled && a.gcDisplayDownload.addClass("fz-hide"); a.gcDisplayDisplay.attr("src", a.gcThumbsImg.eq(a.current).attr("src")); a.setup(); c.when(a.preloadImages()).done(function () { a.update(); a.initEvents() })
    }, preloadImages: function () {
        function b(a,
b) { this.width = a; this.height = b } var a = this, e = 0, f = a.gcTotalThumbsImg; return c.Deferred(function (m) {
    a.gcThumbsImg.each(function (d) {
        c("<img/>").attr("src", c(this).attr("src")).load(function () {
            var d = new b(this.width, this.height), h = a.gcThumbsLi.find("img[src*='" + c(this).attr("src") + "']").parents("li").index(); a.gcImgNaturalSizes[h] = d; a.setupThumbImg(a.gcThumbsLi.eq(h), h); a.removeLoader(a.gcThumbsLi.eq(h)); a.gcThumbsLi.eq(h).find(".fz-li-display-container").removeClass("fz-hide"); a.current == h && (a.removeLoader(a.gcDisplayArea),
a.gcDisplayContainer.removeClass("fz-hide"), a.setupDisplayDisplay(), a.setupLens()); ++e === f && m.resolve()
        })
    })
}).promise()
    }, setup: function () {
        this.setupDisplayArea(); "false" == this.config.isOneThumbShown && 1 == this.gcTotalThumbsImg ? (this.gcThumbsArea.addClass("fz-hide"), this.config.isKeypressEnabled = "false") : (this.config.isOneThumbShown = "true", this.setupThumbs()); 1 == this.gcTotalThumbsImg ? (this.gcOverlayPrevious.addClass("fz-hide"), this.gcOverlayNext.addClass("fz-hide")) : (this.gcOverlayPrevious.css("margin-top",
-(this.gcOverlayPrevious.height() / 2)), this.gcOverlayNext.css("margin-top", -(this.gcOverlayNext.height() / 2))); this.element.css("width", parseFloat(this.gcDisplayArea.css("width"))); this.element.css("height", parseFloat(this.gcThumbsArea.css("height")) + parseFloat(this.gcDisplayArea.css("height")) + parseFloat(this.gcThumbsArea.css("margin-top")) + parseFloat(this.gcThumbsArea.css("margin-bottom")) + parseFloat(this.gcDisplayArea.css("margin-top")) + parseFloat(this.gcDisplayArea.css("margin-bottom")))
    }, setupDisplayArea: function () {
        var b,
a, c = this.config.widthDisplay, f = this.config.heightDisplay; this.gcDisplayArea.css("height", "0"); this.gcDisplayArea.css("width", "0"); "true" == this.config.isAutoScaleDisplay ? ("true" == this.config.isAutoScaleHeight ? (b = this.config.widthDisplay, a = f / c * b) : (a = this.config.heightDisplay, b = c / f * a), this.gcDisplayArea.css("height", a), this.gcDisplayArea.css("width", b)) : (b = parseFloat(this.gcDisplayArea.css("width")), a = parseFloat(this.gcDisplayArea.css("height")), "true" == this.config.isAutoScaleHeight ? (a = f / c * b, this.gcDisplayArea.css("height",
a)) : (b = c / f * a, this.gcDisplayArea.css("width", b))); this.gcDisplayPrevious.css("margin-top", -(this.gcDisplayPrevious.height() / 2)); this.gcDisplayNext.css("margin-top", -(this.gcDisplayNext.height() / 2)); 1 == this.gcTotalThumbsImg && (this.gcDisplayPrevious.addClass("fz-hide"), this.gcDisplayNext.addClass("fz-hide")); this.gcDisplayContainer.addClass("fz-hide"); this.addLoader(this.gcDisplayArea)
    }, setupDisplayDisplay: function () {
        this.gcDisplayContainer.css("width", "0"); this.gcDisplayContainer.css("height", "0");
        this.gcDisplayContainer.css("width", parseFloat(this.gcDisplayArea.css("width"))); this.gcDisplayContainer.css("height", parseFloat(this.gcDisplayArea.css("height"))); var b = parseFloat(this.gcDisplayContainer.css("width")) / this.gcImgNaturalSizes[this.current].width, a = parseFloat(this.gcDisplayContainer.css("height")) / this.gcImgNaturalSizes[this.current].height; 1 > b || 1 > a ? (this.gcDisplayContainer.on("mousemove.glasscase", c.proxy(this.mousemoveHandler, this)), this.gcDisplayContainer.on("mouseenter.glasscase",
c.proxy(this.mouseenterHandler, this)), this.gcDisplayContainer.on("mouseleave.glasscase", c.proxy(this.mouseleaveHandler, this)), a = b < a ? b : a, b = a * this.gcImgNaturalSizes[this.current].width, a *= this.gcImgNaturalSizes[this.current].height) : (this.gcDisplayContainer.trigger("mouseleave.glasscase"), this.gcDisplayContainer.off("mousemove.glasscase", c.proxy(this.mousemoveHandler, this)), this.gcDisplayContainer.off("mouseenter.glasscase", c.proxy(this.mouseenterHandler, this)), this.gcDisplayContainer.off("mouseleave.glasscase",
c.proxy(this.mouseleaveHandler, this)), b = this.gcImgNaturalSizes[this.current].width, a = this.gcImgNaturalSizes[this.current].height); this.gcDisplayDisplay.css("width", b); this.gcDisplayDisplay.css("height", a); this.gcDisplayContainer.css("width", b); this.gcDisplayContainer.css("height", a); this.gcDisplayContainer.css("margin-left", -(parseFloat(this.gcDisplayContainer.css("width")) / 2)); this.gcDisplayContainer.css("margin-top", -(parseFloat(this.gcDisplayContainer.css("height")) / 2))
    }, setupZoom: function () {
        this.gcZoomDisplay.attr("src",
this.gcDisplayDisplay.attr("src")); var b = 2 * parseFloat(this.gcDisplayArea.css("border-top-width")); this.gcZoomContainer.css("width", 0); this.gcZoomContainer.css("height", 0); this.gcZoom.css("width", parseFloat(this.gcDisplayContainer.css("height")) + b); this.gcZoom.css("height", parseFloat(this.gcDisplayContainer.css("height")) + b); this.gcZoomContainer.css("width", parseFloat(this.gcZoom.css("width"))); this.gcZoomContainer.css("height", parseFloat(this.gcZoom.css("height")))
    }, setupZoomPos: function () {
        "left" ==
this.config.zoomPosition ? (this.gcZoom.css("right", this.element.outerWidth(!0)), this.gcZoom.css("margin-right", ".2em")) : (this.gcZoom.css("left", this.element.outerWidth(!0)), this.gcZoom.css("margin-left", ".2em")); this.gcZoom.css("top", this.gcDisplayContainer.position().top + parseFloat(this.gcDisplayContainer.css("margin-top"))); "top" == this.config.thumbsPosition && (this.gcZoom.css("top", parseFloat(this.gcZoom.css("top")) + parseFloat(this.gcThumbsArea.css("height"))), this.gcZoom.css("margin-top", ".2em"))
    },
        setupLens: function () { var b = Math.round(parseFloat(this.gcZoomContainer.css("width")) / this.gcImgNaturalSizes[this.current].width * 100), b = Math.round(parseFloat(this.gcDisplayDisplay.css("width")) * b / 100); this.gcLens.css("width", b); this.gcLens.css("height", b); this.mousemoveHandler() }, addLoader: function (b) { c(b).prepend(this.gcLoader.clone()) }, removeLoader: function (b) { b = c(b).find(".fz-loading"); b.length && b.remove() }, setupThumbImg: function (b, a) {
            var e = parseFloat(this.gcThumbsImg.parent().css("width")), f = parseFloat(this.gcThumbsImg.parent().css("height"));
            c(b); e /= this.gcImgNaturalSizes[a].width; f /= this.gcImgNaturalSizes[a].height; f = e > f ? e : f; this.gcThumbsImg[a].width = Math.ceil(this.gcImgNaturalSizes[a].width * f, 10); this.gcThumbsImg[a].height = Math.ceil(this.gcImgNaturalSizes[a].height * f, 10); this.gcThumbsImg.eq(a).css("margin-top", -(parseFloat(this.gcThumbsImg.eq(a).css("height")) / 2)); this.gcThumbsImg.eq(a).css("margin-left", -(parseFloat(this.gcThumbsImg.eq(a).css("width")) / 2)); this.gcThumbsLiDiv.eq(a).removeClass("fz-hide"); this.removeLoader(this.gcThumbsLi.eq(a))
        },
        setupThumbs: function () {
            this.gcThumbsArea.css("width", parseFloat(this.gcDisplayArea.css("width"))); var b = this.config.widthDisplay / this.config.heightDisplay, a = parseFloat(this.gcThumbsArea.css("width")) / this.config.nrThumbsPerRow - (this.config.nrThumbsPerRow - 1) * parseFloat(this.gcThumbsLi.css("margin-right")) / this.config.nrThumbsPerRow, b = a / b; this.gcThumbsLi.css("width", a); this.gcThumbsLi.css("height", b); this.gcThumbsLiDiv.addClass("fz-hide"); for (var c = 0; c < this.gcThumbsLi.length; c++) this.addLoader(this.gcThumbsLi[c]);
            "true" == this.config.isThumbsOneRow ? this.gcThumbsLi.last().css("margin-right", 0) : (this.gcThumbsUl.find(":nth-child(" + this.config.nrThumbsPerRow + "n)").css("margin-right", 0), this.gcThumbsUl.find(":nth-child(n +" + (parseFloat(this.config.nrThumbsPerRow) + 1) + ")").css("margin-top", ".2em")); "true" == this.config.isThumbsOneRow ? (this.gcThumbsUl.css("width", Math.ceil(a * this.gcThumbsLi.length + (this.gcThumbsLi.length - 1) * parseFloat(this.gcThumbsLi.css("margin-right")))), this.gcThumbsUl.css("height", Math.ceil(b))) :
(this.gcThumbsUl.css("width", parseFloat(this.gcThumbsArea.css("width"))), a = Math.ceil((this.gcThumbsLi.length - 1) / this.config.nrThumbsPerRow), this.gcThumbsUl.css("height", Math.ceil(b * a + parseFloat(this.gcThumbsLi.css("margin-right")) * (a - 1)))); this.gcThumbsArea.css("height", Math.ceil(parseFloat(this.gcThumbsUl.css("height")))); "bottom" == this.config.thumbsPosition && (this.gcDisplayArea.css("top", "0"), this.gcThumbsArea.css("top", this.gcDisplayArea.outerHeight(!0)), this.gcThumbsArea.css("margin-top", ".2em"));
            "top" == this.config.thumbsPosition && (this.gcThumbsArea.css("top", "0"), this.gcDisplayArea.css("top", this.gcThumbsArea.outerHeight(!0)), this.gcDisplayArea.css("margin-top", ".2em")); "true" == this.config.isThumbsOneRow ? (this.gcThumbsAreaPrevious.removeClass("fz-hide"), this.gcThumbsAreaNext.removeClass("fz-hide"), this.gcThumbsPrevious.css("margin-top", -parseFloat(this.gcThumbsPrevious.css("height")) / 2), this.gcThumbsNext.css("margin-top", -parseFloat(this.gcThumbsNext.css("height")) / 2), this.setupSlider()) :
(this.gcThumbsAreaPrevious.addClass("fz-hide"), this.gcThumbsAreaNext.addClass("fz-hide"))
        }, setupSlider: function () {
            this.gcTotalThumbsImg <= this.config.nrThumbsPerRow ? (this.gcThumbsAreaPrevious.addClass("fz-hide"), this.gcThumbsAreaNext.addClass("fz-hide")) : (this.gcThumbsAreaPrevious.removeClass("fz-disabled"), this.gcThumbsAreaNext.removeClass("fz-disabled"), 0 == this.currentSlide && this.gcThumbsAreaPrevious.addClass("fz-disabled"), this.currentSlide == Math.floor((this.gcThumbsLi.length - 1) / this.config.nrThumbsPerRow) &&
this.gcThumbsAreaNext.addClass("fz-disabled"))
        }, update: function () {
            -1 != this.config.colorActiveThumb && this.element.find(".fz-active").css("border-color", ""); this.gcThumbsLiDiv.removeClass("fz-active"); this.gcThumbsLiDiv.eq(this.current).addClass("fz-active"); -1 != this.config.colorActiveThumb && this.element.find(".fz-active").css("border-color", this.config.colorActiveThumb); this.gcDisplayDisplay.attr("src", this.gcThumbsLi.eq(this.current).find("img").attr("src")); this.setupDisplayDisplay(); this.setupZoom();
            this.setupLens(); this.setupZoomPos(); this.gcOverlayArea.hasClass("fz-hide") || (this.gcOverlayDisplay.attr("src", this.gcDisplayDisplay.attr("src")).attr("width", this.gcImgNaturalSizes[this.current].width).attr("height", this.gcImgNaturalSizes[this.current].height), this.gcOverlayDisplay.css("margin-left", -(this.gcOverlayDisplay.width() / 2)).css("margin-top", -(this.gcOverlayDisplay.height() / 2)))
        }, animateImage: function () {
            var b = this; b.isAnimating = !0; b.gcDisplayDisplay.animate({ opacity: .5 }, 200, function () {
                b.gcOverlayArea.hasClass("fz-hide") ||
b.gcOverlayDisplay.animate({ opacity: 0 }, 200, function () { b.update(); b.setupOverlay(); b.gcOverlayDisplay.animate({ opacity: 1 }, 500) }); b.gcOverlayArea.hasClass("fz-hide") && b.update(); b.gcDisplayDisplay.animate({ opacity: 1 }, 500, function () { b.gcZoomDisplay.attr("src", b.gcDisplayDisplay.attr("src")) }); b.isAnimating = !1
            })
        }, nextImage: function () { if (this.isAnimating) return !1; this.old = this.current; this.current = this.current == this.gcThumbsLi.length - 1 ? 0 : this.current + 1; this.slide("true", ""); this.animateImage() }, previousImage: function () {
            if (this.isAnimating) return !1;
            this.old = this.current; this.current = 0 == this.current ? this.gcThumbsLi.length - 1 : this.current - 1; this.slide("true", ""); this.animateImage()
        }, slide: function (b, a) {
            if ("false" != this.config.isThumbsOneRow) {
                var e = 0; "true" == b ? e = Math.floor(this.current / this.config.nrThumbsPerRow) : "previous" == a ? (e = 0, 0 < this.currentSlide && (e = this.currentSlide - 1)) : (e = Math.floor((this.gcThumbsLi.length - 1) / this.config.nrThumbsPerRow), this.currentSlide < e && (e = this.currentSlide + 1)); if (e != this.currentSlide) {
                    var f = parseFloat(this.gcThumbsArea.css("width")) +
parseFloat(this.gcThumbsLi.css("margin-right")); this.currentSlide = e; this.gcThumbsUl.animate({ left: -(e * f) + "px" }, 400); c.proxy(function () { this.isAnimating = !1; this.setupSlider() }, this).call()
                } 
            } 
        }, mousemoveHandler: function (b) {
            b !== q && (this.currentMousePos.x = b.pageX, this.currentMousePos.y = b.pageY); if (-1 != this.currentMousePos.x || -1 != this.currentMousePos.y) {
                var a = this.gcDisplayContainer.offset(); b = this.currentMousePos.x - a.left - parseFloat(this.gcDisplayContainer.css("border-left-width")); var a = this.currentMousePos.y -
a.top - parseFloat(this.gcDisplayContainer.css("border-top-width")), c = parseFloat(this.gcDisplayDisplay.css("width")), f = parseFloat(this.gcDisplayDisplay.css("height")), d = parseFloat(this.gcLens.css("width")), k = parseFloat(this.gcLens.css("height")), l = a - Math.round(k / 2), h = b - Math.round(d / 2), g = parseFloat(this.gcZoomDisplay.css("width")) / c, n = -l * g, g = -h * g; 0 > a - k / 2 && (n = l = 0); a + k / 2 > 0 + f && (l = f - k, n = -(parseFloat(this.gcZoomDisplay.css("height")) - parseFloat(this.gcZoom.css("height")))); 0 > b - d / 2 && (g = h = 0); b + d / 2 > 0 + c && (h =
c - d, g = -(parseFloat(this.gcZoomDisplay.css("width")) - parseFloat(this.gcZoom.css("width")))); this.gcLens.css("top", l); this.gcLens.css("left", h); this.gcZoomDisplay.css("top", n); this.gcZoomDisplay.css("left", g)
            } 
        }, mouseenterHandler: function (b) { var a = this; a.gcZoom.fadeIn(200, function () { a.gcLens.removeClass("fz-hide"); a.gcZoom.removeClass("fz-hide") }) }, mouseleaveHandler: function (b) { var a = this; a.gcLens.addClass("fz-hide"); a.gcZoom.fadeOut(200, function () { a.gcLens.addClass("fz-hide"); a.gcZoom.addClass("fz-hide") }) },
        setupOverlay: function () {
            this.gcOverlayDisplay.attr("src", this.gcDisplayDisplay.attr("src")).css("width", this.gcImgNaturalSizes[this.current].width).css("height", this.gcImgNaturalSizes[this.current].height); parseFloat(this.gcOverlayContainer.css("height")) < this.gcImgNaturalSizes[this.current].height ? this.gcOverlayDisplay.css("margin-top", -(parseFloat(this.gcOverlayContainer.css("height")) / 2)) : this.gcOverlayDisplay.css("margin-top", -(this.gcImgNaturalSizes[this.current].height / 2)); parseFloat(this.gcOverlayContainer.css("width")) <
this.gcImgNaturalSizes[this.current].width ? this.gcOverlayDisplay.css("margin-left", -(parseFloat(this.gcOverlayContainer.css("width")) / 2)) : this.gcOverlayDisplay.css("margin-left", -(this.gcImgNaturalSizes[this.current].width / 2))
        }, initEvents: function () {
            var b = this; b.gcDisplayContainer.on("click.glasscase", function (a) { b.gcOverlayArea.removeClass("fz-hide"); b.setupOverlay(); c("body").addClass("fz-noscroll") }); b.gcDisplayContainer.on("mousemove.glasscase", c.proxy(b.mousemoveHandler, b)); b.gcDisplayContainer.on("mouseenter.glasscase",
c.proxy(b.mouseenterHandler, b)); b.gcDisplayContainer.on("mouseleave.glasscase", c.proxy(b.mouseleaveHandler, b)); b.gcDisplayDownload.on("click.glasscase", function (a) { a = d.createElement("canvas"); a.width = b.gcImgNaturalSizes[b.current].width; a.height = b.gcImgNaturalSizes[b.current].height; a.getContext("2d").drawImage(b.gcDisplayDisplay[0], 0, 0); new Blob; a.toBlob(function (a) { saveAs(a, b.gcDisplayDisplay.attr("src").replace(/^.*[\\\/]/, "")) }, "image/png") }); b.gcDisplayPrevious.on("click.glasscase", function (a) { b.previousImage() });
            b.gcDisplayNext.on("click.glasscase", function (a) { b.nextImage() }); b.gcOverlayPrevious.on("click.glasscase", function (a) { b.previousImage() }); b.gcOverlayNext.on("click.glasscase", function (a) { b.nextImage() }); b.gcOverlayClose.on("click.glasscase", function (a) { c("body").removeClass("fz-noscroll"); b.gcOverlayArea.addClass("fz-hide") }); c(d).on("keydown", function (a) {
                "true" == b.config.isKeypressEnabled && (37 == a.keyCode && b.previousImage(), 39 == a.keyCode && b.nextImage()); 27 == a.keyCode && (c("body").removeClass("fz-noscroll"),
b.gcOverlayArea.addClass("fz-hide"))
            }); b.gcThumbsLi.on("click.glasscase", function (a) { if (b.isAnimating) return !1; b.isAnimating = !0; a = c(this).index(); b.current != a && (b.old = b.current, b.current = a, b.animateImage()) }); b.gcThumbsAreaPrevious.on("click.glasscase", function (a) { b.slide("false", "previous") }); b.gcThumbsAreaNext.on("click.glasscase", function (a) { b.slide("false", "next") })
        } 
    }; c.fn.glassCase = function (b) { this.each(function () { c.data(this, "gcglasscase") || c.data(this, "gcglasscase", new n(c(this), b)) }) } 
})(jQuery,
window, document);
if ("function" !== typeof Blob && "object" !== typeof Blob || "undefined" === typeof URL) if ("function" !== typeof Blob && "object" !== typeof Blob || "undefined" === typeof webkitURL) var Blob = function (c) {
    var p = c.BlobBuilder || c.WebKitBlobBuilder || c.MozBlobBuilder || c.MSBlobBuilder || function (c) {
        var q = function (a) { return Object.prototype.toString.call(a).match(/^\[object\s(.*)\]$/)[1] }, n = function () { this.data = [] }, b = function (a, b, c) { this.data = a; this.size = a.length; this.type = b; this.encoding = c }, a = n.prototype, e = b.prototype, f = c.FileReaderSync,
m = function (a) { this.code = this[this.name = a] }, k = "NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR".split(" "), l = k.length, h = c.URL || c.webkitURL || c, g = h.createObjectURL, p = h.revokeObjectURL, r = h, s = c.btoa, t = c.atob, y = c.ArrayBuffer, A = c.Uint8Array; for (b.fake = e.fake = !0; l--; ) m.prototype[k[l]] = l + 1; h.createObjectURL || (r = c.URL = {}); r.createObjectURL = function (a) {
    var c = a.type; null === c && (c = "application/octet-stream"); if (a instanceof b) return c =
"data:" + c, "base64" === a.encoding ? c + ";base64," + a.data : "URI" === a.encoding ? c + "," + decodeURIComponent(a.data) : s ? c + ";base64," + s(a.data) : c + "," + encodeURIComponent(a.data); if (g) return g.call(h, a)
}; r.revokeObjectURL = function (a) { "data:" !== a.substring(0, 5) && p && p.call(h, a) }; a.append = function (a) {
    var c = this.data; if (A && (a instanceof y || a instanceof A)) { var e = ""; a = new A(a); for (var r = 0, s = a.length; r < s; r++) e += String.fromCharCode(a[r]); c.push(e) } else if ("Blob" === q(a) || "File" === q(a)) if (f) e = new f, c.push(e.readAsBinaryString(a));
    else throw new m("NOT_READABLE_ERR"); else a instanceof b ? "base64" === a.encoding && t ? c.push(t(a.data)) : "URI" === a.encoding ? c.push(decodeURIComponent(a.data)) : "raw" === a.encoding && c.push(a.data) : ("string" !== typeof a && (a += ""), c.push(unescape(encodeURIComponent(a))))
}; a.getBlob = function (a) { arguments.length || (a = null); return new b(this.data.join(""), a, "raw") }; a.toString = function () { return "[object BlobBuilder]" }; e.slice = function (a, c, e) {
    var f = arguments.length; 3 > f && (e = null); return new b(this.data.slice(a, 1 < f ? c :
this.data.length), e, this.encoding)
}; e.toString = function () { return "[object Blob]" }; return n
    } (c); return function (c, q) { var n = q ? q.type || "" : "", b = new p; if (c) for (var a = 0, e = c.length; a < e; a++) b.append(c[a]); return b.getBlob(n) } 
} ("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content || this); else self.URL = webkitURL;
(function (c) {
    var p = c.Uint8Array, d = (c = c.HTMLCanvasElement) && c.prototype, q = /\s*;\s*base64\s*(?:;|$)/i, n = "toDataURL", b; p && (b = new p([62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 0, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51])); c && !d.toBlob && (d.toBlob = function (a, c) {
        c || (c = "image/png"); if (this.mozGetAsFile) a(this.mozGetAsFile("canvas", c)); else {
            var f = Array.prototype.slice.call(arguments,
1), m = this[n].apply(this, f), k = m.indexOf(","), f = m.substring(k + 1), m = q.test(m.substring(0, k)), l; if (Blob.fake) l = new Blob, l.encoding = m ? "base64" : "URI", l.data = f, l.size = f.length; else if (p) if (m) { l = Blob; for (var m = f.length, k = new p(m / 4 * 3 | 0), h = 0, g = 0, d = [0, 0], r = 0, s = 0, t, y; m--; ) y = f.charCodeAt(h++), t = b[y - 43], 255 !== t && void 0 !== t && (d[1] = d[0], d[0] = y, s = s << 6 | t, r++, 4 === r && (k[g++] = s >>> 16, 61 !== d[1] && (k[g++] = s >>> 8), 61 !== d[0] && (k[g++] = s), r = 0)); l = new l([k], { type: c }) } else l = new Blob([decodeURIComponent(f)], { type: c }); a(l)
        } 
    }, d.toBlobHD =
d.toDataURLHD ? function () { n = "toDataURLHD"; var a = this.toBlob(); n = "toDataURL"; return a } : d.toBlob)
})("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content || this);
var saveAs = saveAs || "undefined" !== typeof navigator && navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator) || function (c) {
    if ("undefined" === typeof navigator || !/MSIE [1-9]\./.test(navigator.userAgent)) {
        var p = c.document, d = c.URL || c.webkitURL || c, q = p.createElementNS("http://www.w3.org/1999/xhtml", "a"), n = !c.externalHost && "download" in q, b = c.webkitRequestFileSystem, a = c.requestFileSystem || b || c.mozRequestFileSystem, e = function (a) { (c.setImmediate || c.setTimeout)(function () { throw a; }, 0) }, f = 0, m = [], k =
function () { for (var a = m.length; a--; ) { var b = m[a]; "string" === typeof b ? d.revokeObjectURL(b) : b.remove() } m.length = 0 }, l = function (a, b, c) { b = [].concat(b); for (var f = b.length; f--; ) { var g = a["on" + b[f]]; if ("function" === typeof g) try { g.call(a, c || a) } catch (d) { e(d) } } }, h = function (e, g) {
    var d = this, h = e.type, k = !1, v, z, x = function () { var a = (c.URL || c.webkitURL || c).createObjectURL(e); m.push(a); return a }, B = function () { l(d, ["writestart", "progress", "write", "writeend"]) }, u = function () {
        if (k || !v) v = x(e); z ? z.location.href = v : window.open(v,
"_blank"); d.readyState = d.DONE; B()
    }, w = function (a) { return function () { if (d.readyState !== d.DONE) return a.apply(this, arguments) } }, C = { create: !0, exclusive: !1 }, D; d.readyState = d.INIT; g || (g = "download"); if (n) v = x(e), p = c.document, q = p.createElementNS("http://www.w3.org/1999/xhtml", "a"), q.href = v, q.download = g, h = p.createEvent("MouseEvents"), h.initMouseEvent("click", !0, !1, c, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), q.dispatchEvent(h), d.readyState = d.DONE, B(); else {
        c.chrome && h && "application/octet-stream" !== h && (D = e.slice || e.webkitSlice,
e = D.call(e, 0, e.size, "application/octet-stream"), k = !0); b && "download" !== g && (g += ".download"); if ("application/octet-stream" === h || b) z = c; a ? (f += e.size, a(c.TEMPORARY, f, w(function (a) {
    a.root.getDirectory("saved", C, w(function (a) {
        var b = function () {
            a.getFile(g, C, w(function (a) {
                a.createWriter(w(function (b) {
                    b.onwriteend = function (b) { z.location.href = a.toURL(); m.push(a); d.readyState = d.DONE; l(d, "writeend", b) }; b.onerror = function () { var a = b.error; a.code !== a.ABORT_ERR && u() }; ["writestart", "progress", "write", "abort"].forEach(function (a) {
                        b["on" +
a] = d["on" + a]
                    }); b.write(e); d.abort = function () { b.abort(); d.readyState = d.DONE }; d.readyState = d.WRITING
                }), u)
            }), u)
        }; a.getFile(g, { create: !1 }, w(function (a) { a.remove(); b() }), w(function (a) { a.code === a.NOT_FOUND_ERR ? b() : u() }))
    }), u)
}), u)) : u()
    } 
}, g = h.prototype, x = function (a, b) { return new h(a, b) }; g.abort = function () { this.readyState = this.DONE; l(this, "abort") }; g.readyState = g.INIT = 0; g.WRITING = 1; g.DONE = 2; g.error = g.onwritestart = g.onprogress = g.onwrite = g.onabort = g.onerror = g.onwriteend = null; c.addEventListener("unload", k, !1);
        x.unload = function () { k(); c.removeEventListener("unload", k, !1) }; return x
    } 
} ("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content); "undefined" !== typeof module && (module.exports = saveAs);